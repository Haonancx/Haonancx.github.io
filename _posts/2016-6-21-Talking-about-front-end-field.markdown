---
layout: post
title:  "浅谈前端技术领域"
date:   2016-6-21 23:16:15
categories: 随笔 浅谈前端
tags: 随笔 浅谈前端
---
#### 在技术中求胜人,不如在技术中求胜己。

![fe-bg](https://i.imgur.com/ppgSvTP.jpg)

### "虚假繁荣"


能赚钱的不只有 IT，IT 行业赚钱的也不只有前端！进入一个行业最好的时机就是在刚开始萌芽的的时候！因为那时候的门槛相对最低！

在如今的互联网时代，如果要问哪一个技术领域的开发者最好入门并快速找到工作，非前端工程师无疑，著有 "入门门槛低，待遇起点高"的美称。

在此之前，人们对前端这块的要求也只是能用就行，很少会在上面去细致、深入地建立一套完善体系，所以水平难免参差不齐。

而如今纵观前端领域，你会发现低端饱和，高端缺人！ 具不完全统计，在一线城市，会用主流的前端框架，待遇起点就能给到至少 8K 以上（时间 2015 年），注意，是会用；而一些从业者在服务端的待遇会在一开始不如前端；比如 Java、Python等。

而市场上的大把前端都是培训出来的人，当然大部分培训出来的就止步在这里了，毕竟他们都是培训完了，就完了。

![FE-3](http://i.imgur.com/YeXkI2L.jpg)

人都只看见前端是入门最好的，殊不知前端是 IT 业最近几年变化速度最快的，而培训班又在源源不断的打造初级前端，一出来就敢说 3 年经验，（仅仅3个月）；然后前端行业无形中就被抬高了准入门槛，至少初级前端这一块烂得很彻底。


![FE-2](http://i.imgur.com/foFn2Ew.jpg)

前端门槛的确很低，会用 jquery，能布局页面，就算 “入门” 了，虽然去不了一线，至少在小公司还能混日子，加上部分阿猫阿狗垂涎程序员的工资，所以一旦迈入门槛，什么人都能称自己是前端。

其实他们不知道，跨入门槛才到前端山底下，要想向上爬，还得学 HTTP ，C++，数据结构，常用算法等，天呐好辛苦，环顾四周，加上有问题网上一搜一大把的拿来主义，山底下挺凉快的，所以这帮大拿就跟底下呆着。

后来发现，你会发现大拿们没有系统学习过计算机的基础知识，缺乏软件工程上的意识，卧槽，新需求一来，现有框架解决不了，再引入别的框架，之后就堆代码堆框架堆业务，进而将代码变成了"乱码"。

前端技术更新得很快，所以经常会看到一些撕逼的现象，其他领域也存在这样的现象，只不过前端尤为突出，而且极其"活跃"，例如 github 上有 bug 加内存泄露的项目还能几百星的大有人在。

就像微信小程序刚出来的时候，绝大部分人都热捧，都在宣称 app 时代已成过去，嗯，无知自己知道就好了，就不要出来显摆了；我曾在这篇文章中谈过对它的看法[《我对微信小程序的看法》](http://fsux.me/%E9%9A%8F%E7%AC%94/2016/12/19/My-view-on-the-WeChat-applet.html)。


明眼人都知道，中国是市场在起主导作用，市场需要什么，培训机构，和 "人才市场" （也不清楚这个人才是如何定义的） 就会针对市场培养什么，好比前几年培训机构大量提供 Android 和 iOS 培训，再久远一些就是 Java 工程师炙手可热的时代，到前端，再到大数据、云工程师，其实一切最终的供求关系都会得以平衡，有需求就会有供给，等到市场饱和，待遇也会在市场上得到持恒。

很正常，等市场饱和了，就会去粗取精，去伪存真了。

##### 我们绝大部分人，25 岁就已经死了，直到 75 岁才被埋。

### 框架战争

而框架之间的战争，不过是用其长处攻击其短处，正所谓文无第一，武无第二，你要是觉得用 Jquery 最适合业务，那就是最好的选择，和用其他框架是一个道理。

![FE-5](http://i.imgur.com/D8i9Gqk.jpg)

不是你一两句话就能影响到公司的整体架构，架构师们都是经验丰富的老手，在技术选型落地后，他要对他的选择负责到底，而非你听风就是雨，如果公司听信你的话，选用了你鼓吹的框架，在之后的业务延伸上遇到问题，你能负责吗？你能承担经济损失吗？你不能，因为你经济条件足够好的话，就不会进入程序员这个行业，因为你在一开始没有对整个技术架构考虑周全，说到底是你水平不够。

要知道 NG、Vue、React 要解决的是什么问题，一是大而全的 NG，固然相对来说显得臃肿，性能也会被诟病；一个是小而精，专注解决视图层的问题，周边会有一些搭配的解决方案，但也要你去折腾 webpack 去配置和安装一大堆配置，会显得麻烦，特别是对于大拿们；你和我说，有各种 XX-Cli 啊，嗯，你以为解决问题了？

Vue 一直被业界美曰其名简单、小巧、易上手，其他两家学习曲线相对陡峭，人总是贪婪的，当他用 Vue 做一些简单的单页应用或者活动页面时挺爽的，然后跑去各大社区鼓吹；然后业务一旦复杂，马上就懵逼了，就说这框架这不好那不好，怎么可扩展性那么差，如何如何，为什么？一开始让他做加减法得心应手，你一下让他推洛必达法则，肯定一下懵了啊，不是说 Vue 不好，而是他水平不够，而那些肯费心费力去折腾 NG 和 React 的，会慢慢累积对框架的认识，进而业务来了也不怕，但是依然没什么用处，其中的利弊依然要你去权衡。

框架这个东西只是帮你解决了一些问题，给你的项目带来了一些便利；我们要做的是学习这些框架的思想，如果有时间可以深入的研究一下一两个框架的源码，你会有不一样的发现。还有，框架是一群人一个填坑的成果，不要过度依赖框架，如果项目中你只是想要一个数据绑定功能，当然可以自己学着去造轮子，而不是为一个小功能去引一个框架。

总而言之，在遇到问题，有技术热情的人去做个什么工具来解决这个问题，"初学者"靠加班和堆代码解决问题。两种不同模式会产生出什么样的技术人才，一目了然。

> 但是，我们应该看到，互联网很多开创性的解决方案基本是美国公司做出来的，比如亚马逊为了解决计算资源过剩的问题，第一个搞了云计算，现在为解决最后一公里的问题，又在搞无人机投递实验；谷歌就更不用说了，第一个遇到大数据处理的问题，发表了跨时代的三篇大数据处理的论文，现在又在搞机器人、机器学习。国内一些公司开发和运维的基础设施，不过就是拿了国外的开源框架，做点小改动本地化而已。—— 引用自《期权如何处理让我纠结》



### "人人都是大神"

目前看起来，大杂烩更受欢迎一些，尤其在如今创业潮中，多面手会更受欢迎。

想起在之前老东家那儿，我曾抱着讨论的心态问过同事。

我：这几年数据绑定在前端领域炒的那么火，真的了解原理的有几个？

他：现在人谁他妈管它原理，能用不就行了，不仅仅是前端，实在不行就上网找，好一点的就 github clone 下来调调参数，声称搞算法亦是。

他：要不就是在各大社区账号里个人介绍里写上那些以为看起来很光鲜的 Title ,什么全栈工程师、架构师，早知道这玩儿意那么好混，当年我毕业面试的时候，也把我的毕业设计一丢，告诉 HR ，你瞧，我这个毕业设计前后台都有，我是全栈。

我：卧槽，高级黑！还是把霰弹枪。

![1](http://i.imgur.com/JAMQxEF.jpg)

他：社区里不乏一些从业者工作了几年，堆积了几招，参加几个社区聚会，各种 conf 什么的，跑个过场，拍拍照发照片到社交，然后就觉得自己是大牛了，开始到处游说什么框架，高端点的，翻翻各种外国文献，就开始被涌入前端的初学者各种封神，优越感爆棚。

我：其实就是炫技，想得很多，但其实不是那么接地气，之所以如此，都希望自己是那个指点江山的，却大部分囿在自己的专业领域内，而不能从上级和平级的同行那里听进不同的声音。

##### 我不怕我没本事，我怕我以为自己有本事。

### "真本事"

理念启发形式，而没有形式的创造，理念就无所依附，无有价值。

如果作为纯的技术分享，当然是一件好事情，web 的本质其中有一条就是开放，技术这东西，让你觉得越学越觉得自己越无知，进而让你内敛，让你对技术时刻保持存疑的态度。

接受现实吧！承认自己弱也是一种进步，只有放下姿态才能看得更全面；现实是不完美的，市场也是随时变化的，网约车火，全都搞网约车，直播火，全搞直播，共享单车火，全一股脑做共享单车，阿尔法狗火带起了人工智能，全世界的无知企业也开始吹嘘自己在搞人工智能，搞大数据。


在技术变革商业与日俱增的今天，缺少得力的架构师已经成为制约很多企业增长的瓶颈。

当经历了整个生态之后，你会变得务实，正所谓会说不如会写，说一大套理论不如你去反复的去思考和敲代码，那样更务实， 想了那么多，却没有一样东西落地， 也没有一样东西让人看得见摸得着。

务实的人则更加贴近现实，专注于拿结果，不需要想得很多，只要有哪个事情是可以干完拿到结果的，就马上干掉，而不会左思右想，迟迟不动手。


![FE-4](http://i.imgur.com/fngCGXO.jpg)


#### 当然，我在写这篇文章的时候，我也犯了文章中我提及的错。

#### 别忘了中国人最喜欢造神，而且也喜欢毁神。












