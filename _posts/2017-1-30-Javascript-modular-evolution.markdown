---
layout: post
title:  "Javascript 模块化演进"
date:   2017-1-30 22:17:03
categories: 浅谈前端 设计模式 JS
tags: 浅谈前端 设计模式 JS
---
#### 从刀耕火种，模块化编程，再到如今的组件化架构，Javascript 是如何演变的。

![JM-BG](http://i.imgur.com/9043QaQ.jpg)

细细整理了过去接触过的那些前端技术，发现前端演进是段特别有意思的历史。

人们总是在过去就做出未来需要的框架，而现在流行的是过去的过去发明过的。

随着基础设置的不断完善以及代码封装层级的不断提高，使得前端一个人能够完成的事越来越多，这是技术积累的必然结果。

前端负责其余工作，后端只需做数据提供商，这种分工模式一定是更清晰也更高效的，所以今天要成为 所谓的 "Web 全栈工程师"，门槛也只会越来越低。

##### 模块化是指解决一个复杂问题时自顶向下逐层把系统划分成若干模块的过程，有多种属性，分别反映其内部特性。【百度百科】

模块化的运行方式分为两种：

#### 独立的工作运行模式

各个模块可独立工作，即便单组模块出现故障也不影响整个系统工作。
 
#### 分级启动功能

当每组模块达到满负荷时系统会自动启动另一组模块，从而保证系统的输出始终与实际需求匹配，确保每个模块高效运行，又能节约资源，提高效率。



### 刀耕火种



### 小试牛刀

### 初见锋芒

### 短兵相接

### 各守城池

### 全面打击

编写中...

#### 简而言之，而模块化编程其实就是如今组件化架构的一个早期的缩影，其本质是分治，模块化编程如今作为一种流行的 Javascript 编程模式。它的目的可以使得代码更易于理解和维护，使其模块间相互调用更加的灵活，但是还有许多优秀的实践还没有广为人知。